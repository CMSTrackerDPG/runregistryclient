import runreg


def test_get_flat():
    runs = runreg.get(flat=True, run_number=(327596, "="))
    run = runs[0]

    expected_keys = [
        "id",
        "name",
        "appeared_in",
        "global_state",
        "btag_state",
        "btag-btag_status",
        "btag-btag_comment",
        "btag-btag_cause",
        "castor_state",
        "castor-castor_status",
        "castor-castor_comment",
        "castor-castor_cause",
        "csc_state",
        "csc-csc_status",
        "csc-csc_comment",
        "csc-csc_cause",
        "csc-occupancy_status",
        "csc-occupancy_comment",
        "csc-occupancy_cause",
        "csc-integrity_status",
        "csc-integrity_comment",
        "csc-integrity_cause",
        "csc-strips_status",
        "csc-strips_comment",
        "csc-strips_cause",
        "csc-timing_status",
        "csc-timing_comment",
        "csc-timing_cause",
        "csc-efficiency_status",
        "csc-efficiency_comment",
        "csc-efficiency_cause",
        "csc-gasgains_status",
        "csc-gasgains_comment",
        "csc-gasgains_cause",
        "csc-pedestals_status",
        "csc-pedestals_comment",
        "csc-pedestals_cause",
        "csc-resolution_status",
        "csc-resolution_comment",
        "csc-resolution_cause",
        "csc-segments_status",
        "csc-segments_comment",
        "csc-segments_cause",
        "csc-tf_status",
        "csc-tf_comment",
        "csc-tf_cause",
        "csc-triggergpe_status",
        "csc-triggergpe_comment",
        "csc-triggergpe_cause",
        "ctpps_state",
        "ctpps-ctpps_status",
        "ctpps-ctpps_comment",
        "ctpps-ctpps_cause",
        "ctpps-rp45_210_status",
        "ctpps-rp45_210_comment",
        "ctpps-rp45_210_cause",
        "ctpps-rp45_220_status",
        "ctpps-rp45_220_comment",
        "ctpps-rp45_220_cause",
        "ctpps-rp45_cyl_status",
        "ctpps-rp45_cyl_comment",
        "ctpps-rp45_cyl_cause",
        "ctpps-rp56_210_status",
        "ctpps-rp56_210_comment",
        "ctpps-rp56_210_cause",
        "ctpps-rp56_220_status",
        "ctpps-rp56_220_comment",
        "ctpps-rp56_220_cause",
        "ctpps-rp56_cyl_status",
        "ctpps-rp56_cyl_comment",
        "ctpps-rp56_cyl_cause",
        "ctpps-trk45_210_status",
        "ctpps-trk45_210_comment",
        "ctpps-trk45_210_cause",
        "ctpps-time45_status",
        "ctpps-time45_comment",
        "ctpps-time45_cause",
        "ctpps-trk56_220_status",
        "ctpps-trk56_220_comment",
        "ctpps-trk56_220_cause",
        "ctpps-time56_status",
        "ctpps-time56_comment",
        "ctpps-time56_cause",
        "ctpps-time_global_status",
        "ctpps-time_global_comment",
        "ctpps-time_global_cause",
        "dt_state",
        "dt-dt_status",
        "dt-dt_comment",
        "dt-dt_cause",
        "ecal_state",
        "ecal-ecal_status",
        "ecal-ecal_comment",
        "ecal-ecal_cause",
        "ecal-ebp_status",
        "ecal-ebp_comment",
        "ecal-ebp_cause",
        "ecal-ebm_status",
        "ecal-ebm_comment",
        "ecal-ebm_cause",
        "ecal-eep_status",
        "ecal-eep_comment",
        "ecal-eep_cause",
        "ecal-eem_status",
        "ecal-eem_comment",
        "ecal-eem_cause",
        "ecal-es_status",
        "ecal-es_comment",
        "ecal-es_cause",
        "ecal-esp_status",
        "ecal-esp_comment",
        "ecal-esp_cause",
        "ecal-esm_status",
        "ecal-esm_comment",
        "ecal-esm_cause",
        "ecal-analysis_status",
        "ecal-analysis_comment",
        "ecal-analysis_cause",
        "ecal-collisions_status",
        "ecal-collisions_comment",
        "ecal-collisions_cause",
        "ecal-laser_status",
        "ecal-laser_comment",
        "ecal-laser_cause",
        "ecal-tpg_status",
        "ecal-tpg_comment",
        "ecal-tpg_cause",
        "ecal-noise_status",
        "ecal-noise_comment",
        "ecal-noise_cause",
        "ecal-preshower_status",
        "ecal-preshower_comment",
        "ecal-preshower_cause",
        "ecal-timing_status",
        "ecal-timing_comment",
        "ecal-timing_cause",
        "egamma_state",
        "egamma-egamma_status",
        "egamma-egamma_comment",
        "egamma-egamma_cause",
        "hcal_state",
        "hcal-hb_status",
        "hcal-hb_comment",
        "hcal-hb_cause",
        "hcal-he_status",
        "hcal-he_comment",
        "hcal-he_cause",
        "hcal-hf_status",
        "hcal-hf_comment",
        "hcal-hf_cause",
        "hcal-ho0_status",
        "hcal-ho0_comment",
        "hcal-ho0_cause",
        "hcal-ho12_status",
        "hcal-ho12_comment",
        "hcal-ho12_cause",
        "hlt_state",
        "hlt-muons_status",
        "hlt-muons_comment",
        "hlt-muons_cause",
        "hlt-electrons_status",
        "hlt-electrons_comment",
        "hlt-electrons_cause",
        "hlt-photons_status",
        "hlt-photons_comment",
        "hlt-photons_cause",
        "hlt-jetmet_status",
        "hlt-jetmet_comment",
        "hlt-jetmet_cause",
        "hlt-tau_status",
        "hlt-tau_comment",
        "hlt-tau_cause",
        "hlt-bjets_status",
        "hlt-bjets_comment",
        "hlt-bjets_cause",
        "hlt-technical_status",
        "hlt-technical_comment",
        "hlt-technical_cause",
        "jetmet_state",
        "jetmet-jetmet_status",
        "jetmet-jetmet_comment",
        "jetmet-jetmet_cause",
        "l1t_state",
        "l1t-l1tmu_status",
        "l1t-l1tmu_comment",
        "l1t-l1tmu_cause",
        "l1t-l1tcalo_status",
        "l1t-l1tcalo_comment",
        "l1t-l1tcalo_cause",
        "l1t-software_status",
        "l1t-software_comment",
        "l1t-software_cause",
        "lumi_state",
        "lumi-lumi_status",
        "lumi-lumi_comment",
        "lumi-lumi_cause",
        "muon_state",
        "muon-muon_status",
        "muon-muon_comment",
        "muon-muon_cause",
        "rpc_state",
        "rpc-rpc_status",
        "rpc-rpc_comment",
        "rpc-rpc_cause",
        "rpc-hv_status",
        "rpc-hv_comment",
        "rpc-hv_cause",
        "rpc-lv_status",
        "rpc-lv_comment",
        "rpc-lv_cause",
        "rpc-feb_status",
        "rpc-feb_comment",
        "rpc-feb_cause",
        "rpc-noise_status",
        "rpc-noise_comment",
        "rpc-noise_cause",
        "rpc-elog_status",
        "rpc-elog_comment",
        "rpc-elog_cause",
        "tau_state",
        "tau-tau_status",
        "tau-tau_comment",
        "tau-tau_cause",
        "tracker_state",
        "tracker-track_status",
        "tracker-track_comment",
        "tracker-track_cause",
        "tracker-pix_status",
        "tracker-pix_comment",
        "tracker-pix_cause",
        "tracker-strip_status",
        "tracker-strip_comment",
        "tracker-strip_cause",
        "btag_status",
        "btag_comment",
        "btag_cause",
        "castor_status",
        "castor_comment",
        "castor_cause",
        "cms_status",
        "cms_comment",
        "cms_cause",
        "csc_status",
        "csc_comment",
        "csc_cause",
        "ctpps_status",
        "ctpps_comment",
        "ctpps_cause",
        "dt_status",
        "dt_comment",
        "dt_cause",
        "ecal_status",
        "ecal_comment",
        "ecal_cause",
        "egamma_status",
        "egamma_comment",
        "egamma_cause",
        "es_status",
        "es_comment",
        "es_cause",
        "hcal_status",
        "hcal_comment",
        "hcal_cause",
        "hlt_status",
        "hlt_comment",
        "hlt_cause",
        "jetmet_status",
        "jetmet_comment",
        "jetmet_cause",
        "l1t_status",
        "l1t_comment",
        "l1t_cause",
        "l1tcalo_status",
        "l1tcalo_comment",
        "l1tcalo_cause",
        "l1tmu_status",
        "l1tmu_comment",
        "l1tmu_cause",
        "lowLumi_status",
        "lowLumi_comment",
        "lowLumi_cause",
        "lumi_status",
        "lumi_comment",
        "lumi_cause",
        "muon_status",
        "muon_comment",
        "muon_cause",
        "pix_status",
        "pix_comment",
        "pix_cause",
        "rpc_status",
        "rpc_comment",
        "rpc_cause",
        "strip_status",
        "strip_comment",
        "strip_cause",
        "tau_status",
        "tau_comment",
        "tau_cause",
        "track_status",
        "track_comment",
        "track_cause",
        "createdAt",
        "updatedAt",
        "run_number",
        "class",
        "state",
        "significant",
        "stop_reason",
    ]
    assert set(expected_keys) == set(run.keys())

    assert run["run_number"] == 327596
    assert run["class"] == "Cosmics18"
    assert run["name"] == "/PromptReco/HICosmics18A/DQM"


def test_get():
    runs = runreg.get(run_number=327596)
    run = runs[0]

    expected_keys = [
        "id",
        "name",
        "appeared_in",
        "global_state",
        "global_lumisections",
        "btag_state",
        "btag_lumisections",
        "btag-btag",
        "castor_state",
        "castor_lumisections",
        "castor-castor",
        "csc_state",
        "csc_lumisections",
        "csc-csc",
        "csc-occupancy",
        "csc-integrity",
        "csc-strips",
        "csc-timing",
        "csc-efficiency",
        "csc-gasgains",
        "csc-pedestals",
        "csc-resolution",
        "csc-segments",
        "csc-tf",
        "csc-triggergpe",
        "ctpps_state",
        "ctpps_lumisections",
        "ctpps-ctpps",
        "ctpps-rp45_210",
        "ctpps-rp45_220",
        "ctpps-rp45_cyl",
        "ctpps-rp56_210",
        "ctpps-rp56_220",
        "ctpps-rp56_cyl",
        "ctpps-trk45_210",
        "ctpps-time45",
        "ctpps-trk56_220",
        "ctpps-time56",
        "ctpps-time_global",
        "dt_state",
        "dt_lumisections",
        "dt-dt",
        "ecal_state",
        "ecal_lumisections",
        "ecal-ecal",
        "ecal-ebp",
        "ecal-ebm",
        "ecal-eep",
        "ecal-eem",
        "ecal-es",
        "ecal-esp",
        "ecal-esm",
        "ecal-analysis",
        "ecal-collisions",
        "ecal-laser",
        "ecal-tpg",
        "ecal-noise",
        "ecal-preshower",
        "ecal-timing",
        "egamma_state",
        "egamma_lumisections",
        "egamma-egamma",
        "hcal_state",
        "hcal_lumisections",
        "hcal-hb",
        "hcal-he",
        "hcal-hf",
        "hcal-ho0",
        "hcal-ho12",
        "hlt_state",
        "hlt_lumisections",
        "hlt-muons",
        "hlt-electrons",
        "hlt-photons",
        "hlt-jetmet",
        "hlt-tau",
        "hlt-bjets",
        "hlt-technical",
        "jetmet_state",
        "jetmet_lumisections",
        "jetmet-jetmet",
        "l1t_state",
        "l1t_lumisections",
        "l1t-l1tmu",
        "l1t-l1tcalo",
        "l1t-software",
        "lumi_state",
        "lumi_lumisections",
        "lumi-lumi",
        "muon_state",
        "muon_lumisections",
        "muon-muon",
        "rpc_state",
        "rpc_lumisections",
        "rpc-rpc",
        "rpc-hv",
        "rpc-lv",
        "rpc-feb",
        "rpc-noise",
        "rpc-elog",
        "tau_state",
        "tau_lumisections",
        "tau-tau",
        "tracker_state",
        "tracker_lumisections",
        "tracker-track",
        "tracker-pix",
        "tracker-strip",
        "btag",
        "castor",
        "cms",
        "csc",
        "ctpps",
        "dt",
        "ecal",
        "egamma",
        "es",
        "hcal",
        "hlt",
        "jetmet",
        "l1t",
        "l1tcalo",
        "l1tmu",
        "lowLumi",
        "lumi",
        "muon",
        "pix",
        "rpc",
        "strip",
        "tau",
        "track",
        "createdAt",
        "updatedAt",
        "run_number",
        "run",
    ]
    assert set(expected_keys) == set(run.keys())

    assert run["run_number"] == 327596
    assert run["name"] == "/PromptReco/HICosmics18A/DQM"
    assert run["run"]["class"]["value"] == "Cosmics18"
    assert "status" in run["strip"]
    assert "status" in run["pix"]
    assert "status" in run["track"]
